name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy, rustfmt
          
      - name: Check formatting
        run: cargo fmt -- --check
        
      - name: Run Clippy
        run: cargo clippy -- -D warnings
        
      - name: Build
        run: cargo build --verbose
        
      - name: Run tests
        run: cargo test --verbose

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build Docker image
        run: docker build -t rustegrate:latest .
        
      # Add deployment steps here if needed, for example:
      # - name: Log in to Azure Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: myregistry.azurecr.io
      #     username: ${{ secrets.REGISTRY_USERNAME }}
      #     password: ${{ secrets.REGISTRY_PASSWORD }}
      #
      # - name: Push Docker image to ACR
      #   run: |
      #     docker tag rustegrate:latest myregistry.azurecr.io/rustegrate:latest
      #     docker push myregistry.azurecr.io/rustegrate:latest 